plugins {
	id 'groovy' // groovy support
	id 'java' // java support
	id 'scala' // scala support
	id 'pmd' //code check, working on source code
	id 'com.diffplug.spotless' version '6.0.0'//code format
	id "org.sonarqube" version "3.3" // sonarqube
	id 'org.scoverage' version '7.0.0' // Code coverage plugin for scala
	id "com.github.maiflai.scalatest" version "0.31" // run scalatest without specific spec task
}

ext {
	javaVersion = JavaVersion.VERSION_1_8
	scalaVersion = '2.13'
	scalaBinaryVersion = '2.13.6'
	slf4jVersion = '1.7.32'
	scriptsLocation = 'gradle' + File.separator + 'scripts' + File.separator //location of script plugins
}

apply from: scriptsLocation + '/checkJavaVersion.gradle'
apply from: scriptsLocation + '/spotless.gradle'
apply from: scriptsLocation + '/pmd.gradle'
apply from: scriptsLocation + '/scoverage.gradle'
apply from: scriptsLocation + '/sonarqube.gradle'

configurations {
	scalaCompilerPlugin
}

repositories {
	//searches in Maven Central
	mavenCentral()

	// allows github repos as dependencies
	maven { url 'https://www.jitpack.io' }
}

dependencies {
	// CORE Scala //
	implementation "org.scala-lang:scala-library:${scalaBinaryVersion}"

	// TEST Scala //
	testImplementation "org.scalatest:scalatest_${scalaVersion}:3.2.10"
	testImplementation 'com.vladsch.flexmark:flexmark-all:0.35.10'
	testImplementation "org.scalatest:scalatest_${scalaVersion}:3.2.10"
	testImplementation "org.pegdown:pegdown:1.6.0" // HTML report for scalatest
	testImplementation 'org.spockframework:spock-core:2.0-M1-groovy-2.5'

	// Linter Scala //
	implementation "com.sksamuel.scapegoat:scalac-scapegoat-plugin_${scalaBinaryVersion}:1.4.10" // scala scapegoat
	scalaCompilerPlugin "com.sksamuel.scapegoat:scalac-scapegoat-plugin_${scalaBinaryVersion}:1.4.9" // scala scapegoat

	// logging //
	implementation "com.typesafe.scala-logging:scala-logging_${scalaVersion}:3.9.3" // akka scala logging
	implementation "ch.qos.logback:logback-classic:1.2.5"

	implementation('com.github.ie3-institute:PowerSystemUtils:1.5.3') {
		exclude group: 'org.apache.logging.log4j'
		exclude group: 'org.slf4j'
		/* Exclude our own nested dependencies */
		exclude group: 'com.github.ie3-institute'
	}

	implementation 'com.googlecode.matrix-toolkits-java:mtj:1.0.4' // matrix data structures
	implementation 'org.apache.commons:commons-math3:3.6.1'
	implementation 'org.apache.commons:commons-lang3:3.12.0' // for HashCodeBuilder
	implementation 'javax.measure:unit-api:2.1.3'
	implementation 'org.scalanlp:breeze_2.13:1.0' // Scientific calculations
}

/* scapegoat hook configuration
 * https://github.com/sksamuel/scapegoat
 * using compileScala instead of tasks.withType(ScalaCompile) prevents applying scapegoat to scala test classes
 * see https://docs.gradle.org/current/userguide/scala_plugin.html#sec:configure_scala_classpath for details
 */
compileScala {
	scalaCompileOptions.additionalParameters = [
		"-Xplugin:" + configurations.scalaCompilerPlugin.asPath,
		"-P:scapegoat:dataDir:" + buildDir + "/reports/scapegoat/src/",
		"-P:scapegoat:disabledInspections:VariableShadowing",
		"-P:scapegoat:ignoredFiles:.*/PowerFactoryGrid.scala" // see scapegoat-sbt page for this param
	]
}

// separate scapegoat report for test classes
compileTestScala {
	scalaCompileOptions.additionalParameters = [
		"-Xplugin:" + configurations.scalaCompilerPlugin.asPath,
		"-P:scapegoat:dataDir:" + buildDir + "/reports/scapegoat/testsrc/",
		"-P:scapegoat:disabledInspections:VariableShadowing"
	]
}
group = 'edu.ie3'
version = '0.1-SNAPSHOT'
description = 'powerflow'
sourceCompatibility = javaVersion
targetCompatibility = javaVersion
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

tasks.withType(ScalaCompile) {
	options.forkOptions.jvmArgs += [
		'-Xmx4096m',
		'-Xss4m',
		'-Xms2048m',
		'-XX:+UseParallelGC',
		'-XX:MaxInlineLevel=20'
	]
	options.compilerArgs += [
		'-Xmx4096m',
		'-Xss4m',
		'-Xms2048m',
		'-XX:+UseParallelGC',
		'-XX:MaxInlineLevel=20'
	]
}